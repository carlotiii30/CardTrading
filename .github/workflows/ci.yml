name: CI

on:
  push:

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: ['lts/-1', 'lts/*', 'current']

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}

    - name: Install Docker Compose
      run: |
        sudo apt-get update
        sudo apt-get install -y docker-compose

    - name: Install Dependencies
      run: cd backend && yarn install

    - name: Start Docker Containers
      run: cd backend && yarn docker:start

    - name: Wait for PostgreSQL
      run: |
        echo "Esperando que PostgreSQL se inicie..."
        sleep 10
        until docker-compose exec -T db pg_isready -U pokemon_admin; do
          echo "PostgreSQL no está listo aún. Reintentando..."
          sleep 5
        done
      working-directory: backend

    - name: Create Test Database
      run: |
        echo "Creando la base de datos de prueba..."
        docker-compose exec -T db psql -U pokemon_admin -d postgres -c "DO \$\$ BEGIN IF NOT EXISTS (SELECT FROM pg_database WHERE datname = 'pokemon_trading_test') THEN CREATE DATABASE pokemon_trading_test; END IF; END \$\$;"
      working-directory: backend

    - name: Sync Test Database
      run: |
        echo "Sincronizando la base de datos..."
        docker-compose exec -T app yarn sync:test
      working-directory: backend

    - name: Run Tests in Docker
      run: cd backend && yarn docker:test

    - name: Cleanup Docker Containers
      if: always()
      run: cd backend && yarn docker:stop