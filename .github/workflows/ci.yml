name: Integraci√≥n Continua

on:
  push:

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: ['lts/-1', 'lts/*', 'current']

    services:
      postgres:
        image: postgres:14
        ports:
          - 5433:5432
        env:
          POSTGRES_USER: ${{ secrets.TEST_DB_USERNAME }}
          POSTGRES_PASSWORD: ${{ secrets.TEST_DB_PASSWORD }}
          POSTGRES_DB: ${{ secrets.TEST_DB_DATABASE }}

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}

    - name: Install Dependencies
      run: cd backend && yarn install

    - name: Set Environment Variables
      env:
        JWT_SECRET: ${{ secrets.JWT_SECRET }}
        TEST_DB_DATABASE: ${{ secrets.TEST_DB_DATABASE }}
        TEST_DB_USERNAME: ${{ secrets.TEST_DB_USERNAME }}
        TEST_DB_PASSWORD: ${{ secrets.TEST_DB_PASSWORD }}
        TEST_DB_HOST: localhost
        TEST_DB_PORT: 5433
      run: echo "Environment variables set"

    - name: Debug Database Variables
      run: |
        echo "TEST_DB_DATABASE: $TEST_DB_DATABASE"
        echo "TEST_DB_USERNAME: $TEST_DB_USERNAME"
        echo "TEST_DB_HOST: $TEST_DB_HOST"
        echo "TEST_DB_PORT: $TEST_DB_PORT"
      env:
        TEST_DB_DATABASE: ${{ secrets.TEST_DB_DATABASE }}
        TEST_DB_USERNAME: ${{ secrets.TEST_DB_USERNAME }}
        TEST_DB_PASSWORD: ${{ secrets.TEST_DB_PASSWORD }}
        TEST_DB_HOST: localhost
        TEST_DB_PORT: 5433
    
    - name: Check PostgreSQL Logs
      run: docker logs $(docker ps -q --filter "ancestor=postgres:14")
      
    - name: Wait for PostgreSQL
      run: |
        until pg_isready -h $TEST_DB_HOST -U $TEST_DB_USERNAME; do
          echo "Waiting for PostgreSQL..."
          sleep 2
        done
      env:
        PGPASSWORD: ${{ secrets.TEST_DB_PASSWORD }}
    
    - name: Test Database Connection
      run: |
        psql -h $TEST_DB_HOST -U $TEST_DB_USERNAME -d $TEST_DB_DATABASE -c '\l'
      env:
        PGPASSWORD: ${{ secrets.TEST_DB_PASSWORD }}
      
    - name: Run Database Migrations
      run: cd backend && yarn sync:test

    - name: Run Tests
      env:
        NODE_ENV: test
      run: cd backend && NODE_ENV=test && yarn test