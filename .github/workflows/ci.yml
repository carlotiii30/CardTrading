name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Install dependencies
      run: yarn install

    - name: Start Docker containers
      run: cd backend && yarn docker:start

    - name: Wait for PostgreSQL
      run: |
        echo "Esperando que PostgreSQL se inicie..."
        sleep 10
        until docker-compose exec -T db pg_isready -U pokemon_admin; do
          echo "PostgreSQL no está listo aún. Reintentando..."
          sleep 5
        done
      working-directory: backend

    - name: Create Test Database
      run: |
        echo "Creando la base de datos de prueba..."
        docker-compose exec -T db psql -U pokemon_admin -d postgres -c "DO \$\$ BEGIN IF NOT EXISTS (SELECT FROM pg_database WHERE datname = 'pokemon_trading_test') THEN CREATE DATABASE pokemon_trading_test; END IF; END \$\$;"
      working-directory: backend

    - name: Sync Test Database
      run: |
        echo "Sincronizando la base de datos..."
        docker-compose exec -T app yarn sync:test
      working-directory: backend

    - name: Run Tests in Docker
      run: cd backend && yarn docker:test

    - name: Cleanup Docker Containers
      if: always()
      run: cd backend && yarn docker:stop